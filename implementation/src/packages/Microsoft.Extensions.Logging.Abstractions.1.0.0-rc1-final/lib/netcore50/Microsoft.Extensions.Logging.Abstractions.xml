<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.Logging.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Logging.ILogger">
            <summary>
            Represents a type used to perform logging.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ILogger.Log(Microsoft.Extensions.Logging.LogLevel,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})">
            <summary>
            Aggregates most logging patterns to a single method.
            </summary>
            <param name="logLevel"></param>
            <param name="eventId"></param>
            <param name="state"></param>
            <param name="exception"></param>
            <param name="formatter"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Checks if the given LogLevel is enabled.
            </summary>
            <param name="logLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ILogger.BeginScopeImpl(System.Object)">
            <summary>
            Begins a logical operation scope.
            </summary>
            <param name="state">The identifier for the scope.</param>
            <returns>An IDisposable that ends the logical operation scope on dispose.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ILoggerFactory">
            <summary>
            Represents a type used to configure the logging system and create instances of <see cref="T:Microsoft.Extensions.Logging.ILogger"/> from
            the registered <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider"/>s.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.ILoggerFactory.MinimumLevel">
            <summary>
            The minimum level of log messages sent to loggers.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance.
            </summary>
            <param name="categoryName">The category name for messages produced by the logger.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)">
            <summary>
            Adds an <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider"/> to the logging system.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider"/>.</param>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ILogger`1">
            <summary>
            A generic interface for logging where the category name is derived from the specified
            <paramref name="TCategoryName"/> type name.
            Generally used to enable activation of a named <see cref="T:Microsoft.Extensions.Logging.ILogger"/> from dependency injection.
            </summary>
            <typeparam name="TCategoryName">The type who's name is used for the logger category name.</typeparam>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ILoggerProvider">
            <summary>
            Represents a type that can create instances of <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance.
            </summary>
            <param name="categoryName">The category name for messages produced by the logger.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ILogValues.GetValues">
            <summary>
            Returns an enumerable of key value pairs mapping the name of the structured data to the data.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.LogFormatter">
            <summary>
            Formatters for common logging scenarios.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LogFormatter.Formatter(System.Object,System.Exception)">
            <summary>
            Formats a message from the given state and exception, in the form 
            "state
            exception".
            If state is an <see cref="T:Microsoft.Extensions.Logging.ILogValues"/>, <see cref="M:Microsoft.Extensions.Logging.LogFormatter.FormatLogValues(Microsoft.Extensions.Logging.ILogValues)"/> 
            is used to format the message, otherwise the state's ToString() is used.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LogFormatter.FormatLogValues(Microsoft.Extensions.Logging.ILogValues)">
            <summary>
            Formats an <see cref="T:Microsoft.Extensions.Logging.ILogValues"/>.
            </summary>
            <param name="logValues">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to format.</param>
            <returns>A string representation of the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LogFormatter.FormatLogValues(Microsoft.Extensions.Logging.ILogValues,System.Text.StringBuilder)">
            <summary>
            Formats an <see cref="T:Microsoft.Extensions.Logging.ILogValues"/>.
            </summary>
            <param name="logValues">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to format.</param>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> to append to.</param>
        </member>
        <member name="T:Microsoft.Extensions.Logging.LoggerExtensions">
            <summary>
            ILogger extension methods for common scenarios.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Writes a debug log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="data">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String)">
            <summary>
            Writes a debug log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="data">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            Formats and writes a debug log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Object[])">
            <summary>
            Formats and writes a debug log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a debug log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Int32,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a debug log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogVerbose(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Writes a verbose log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="data">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogVerbose(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String)">
            <summary>
            Writes a verbose log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="data">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogVerbose(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            Formats and writes a verbose log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogVerbose(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Object[])">
            <summary>
            Formats and writes a verbose log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogVerbose(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a verbose log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogVerbose(Microsoft.Extensions.Logging.ILogger,System.Int32,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a verbose log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Writes an informational log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String)">
            <summary>
            Writes an informational log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            Formats and writes an informational log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Object[])">
            <summary>
            Formats and writes an informational log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes an informational log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Int32,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes an informational log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String)">
            <summary>
            Writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            Formats and writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Object[])">
            <summary>
            Formats and writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Exception)">
            <summary>
            Formats the given message and error and writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">The message to log.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Exception)">
            <summary>
            Formats the given message and error and writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="message">The message to log.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Int32,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a warning log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String)">
            <summary>
            Writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            Formats and writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Object[])">
            <summary>
            Formats and writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Exception)">
            <summary>
            Formats the given message and error and writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">The message to log.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Exception)">
            <summary>
            Formats the given message and error and writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="message">The message to log.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Int32,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes an error log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String)">
            <summary>
            Writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            Formats and writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Object[])">
            <summary>
            Formats and writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="format">Format string of the log message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Exception)">
            <summary>
            Formats the given message and error and writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">The message to log.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String,System.Exception)">
            <summary>
            Formats the given message and error and writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="message">The message to log.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Int32,Microsoft.Extensions.Logging.ILogValues,System.Exception)">
            <summary>
            Formats the given <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> and writes a critical log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="eventId">The event id associated with the log.</param>
            <param name="state">The <see cref="T:Microsoft.Extensions.Logging.ILogValues"/> to write.</param>
            <param name="error">The exception to log.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            Formats the message and creates a scope.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to create the scope in.</param>
            <param name="messageFormat">Format string of the scope message.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A disposable scope object. Can be null.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Logging.LoggerFactoryExtensions">
            <summary>
            ILoggerFactory extension methods for common scenarios.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new ILogger instance using the full name of the given type.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="factory">The factory.</param>
        </member>
        <member name="T:Microsoft.Extensions.Logging.LoggerMessage">
            <summary>
            Creates delegates which can be later cached to log messages in a performant way.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope(System.String)">
            <summary>
            Creates a delegate which can be invoked to create a log scope.
            </summary>
            <param name="formatString">The named format string</param>
            <returns>A delegate which when invoked creates a log scope.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``1(System.String)">
            <summary>
            Creates a delegate which can be invoked to create a log scope.
            </summary>
            <typeparam name="T1">The type of the first parameter passed to the named format string.</typeparam>
            <param name="formatString">The named format string</param>
            <returns>A delegate which when invoked creates a log scope.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``2(System.String)">
            <summary>
            Creates a delegate which can be invoked to create a log scope.
            </summary>
            <typeparam name="T1">The type of the first parameter passed to the named format string.</typeparam>
            <typeparam name="T2">The type of the second parameter passed to the named format string.</typeparam>
            <param name="formatString">The named format string</param>
            <returns>A delegate which when invoked creates a log scope.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``3(System.String)">
            <summary>
            Creates a delegate which can be invoked to create a log scope.
            </summary>
            <typeparam name="T1">The type of the first parameter passed to the named format string.</typeparam>
            <typeparam name="T2">The type of the second parameter passed to the named format string.</typeparam>
            <typeparam name="T3">The type of the third parameter passed to the named format string.</typeparam>
            <param name="formatString">The named format string</param>
            <returns>A delegate which when invoked creates a log scope.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerMessage.Define``1(Microsoft.Extensions.Logging.LogLevel,System.Int32,System.String)">
            <summary>
            Creates a delegate which can be invoked for logging a message.
            </summary>
            <typeparam name="T1">The type of the first parameter passed to the named format string.</typeparam>
            <param name="logLevel">The <see cref="T:Microsoft.Extensions.Logging.LogLevel"/></param>
            <param name="eventId">The event id</param>
            <param name="formatString">The named format string</param>
            <returns>A delegate which when invoked creates a log message.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerMessage.Define``2(Microsoft.Extensions.Logging.LogLevel,System.Int32,System.String)">
            <summary>
            Creates a delegate which can be invoked for logging a message.
            </summary>
            <typeparam name="T1">The type of the first parameter passed to the named format string.</typeparam>
            <typeparam name="T2">The type of the second parameter passed to the named format string.</typeparam>
            <param name="logLevel">The <see cref="T:Microsoft.Extensions.Logging.LogLevel"/></param>
            <param name="eventId">The event id</param>
            <param name="formatString">The named format string</param>
            <returns>A delegate which when invoked creates a log message.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.LoggerMessage.Define``3(Microsoft.Extensions.Logging.LogLevel,System.Int32,System.String)">
            <summary>
            Creates a delegate which can be invoked for logging a message.
            </summary>
            <typeparam name="T1">The type of the first parameter passed to the named format string.</typeparam>
            <typeparam name="T2">The type of the second parameter passed to the named format string.</typeparam>
            <typeparam name="T3">The type of the third parameter passed to the named format string.</typeparam>
            <param name="logLevel">The <see cref="T:Microsoft.Extensions.Logging.LogLevel"/></param>
            <param name="eventId">The event id</param>
            <param name="formatString">The named format string</param>
            <returns>A delegate which when invoked creates a log message.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Logging.LogLevel">
            <summary>
            Defines logging severity levels.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.LogLevel.Debug">
            <summary>
            Logs that contain the most detailed messages. These messages may contain sensitive application data.
            These messages are disabled by default and should never be enabled in a production environment.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.LogLevel.Verbose">
            <summary>
            Logs that are used for interactive investigation during development.  These logs should primarily contain
            information useful for debugging and have no long-term value.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.LogLevel.Information">
            <summary>
            Logs that track the general flow of the application. These logs should have long-term value.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.LogLevel.Warning">
            <summary>
            Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the
            application execution to stop.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.LogLevel.Error">
            <summary>
            Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a
            failure in the current activity, not an application-wide failure.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.LogLevel.Critical">
            <summary>
            Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires
            immediate attention.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.LogLevel.None">
            <summary>
            Not used for writing log messages. Specifies that a logging category should not write any messages.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Internal.FormattedLogValues">
            <summary>
            LogValues to enable formatting options supported by <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object)"/>. 
            This also enables using {NamedformatItem} in the format string.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Internal.LogValuesFormatter">
            <summary>
            Formatter to convert the named format items like {NamedformatItem} to <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object)"/> format.
            </summary>
        </member>
    </members>
</doc>
